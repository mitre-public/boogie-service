import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    application
    id("buildSrc.java-library-conventions")
    id("org.springframework.boot")
    id("org.openapi.generator") version "7.12.0"
}

buildscript {
    dependencies {
        classpath("com.fasterxml.jackson.core:jackson-core")
        classpath("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml") {}
    }
    configurations.all {
        resolutionStrategy.force("com.fasterxml.jackson.core:jackson-core:2.13.5")
        resolutionStrategy.force("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5")
    }
}

dependencies {
    implementation(libs.bundles.tdp)
    implementation(libs.bundles.utilities)

    implementation(platform(libs.aws.bom))
    implementation(libs.bundles.aws)

    implementation(platform(SpringBootPlugin.BOM_COORDINATES))
    implementation(libs.bundles.logging)
    implementation(libs.bundles.spring)

    runtimeOnly(libs.bundles.monitoring)

    implementation(libs.bundles.documentation)
    compileOnly(libs.jsr305)

    testImplementation(libs.bundles.testing)

    configurations.all {
        exclude(module = "spring-boot-starter-logging")
        exclude("org.mitre.caasd", "commons")
    }
}

/*
 * Open API Generation tasks
 * https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator-gradle-plugin
 */
val generatedApiDir = "${layout.buildDirectory.get()}/generated/sources/openapi"

sourceSets { main { java { srcDir("${generatedApiDir}/src/main/java") } } }

tasks.withType<org.openapitools.generator.gradle.plugin.tasks.GenerateTask> {
    description = "Generates Spring Boot server API stubs boogie-service"
    inputSpec.set("${rootDir}/src/main/resources/api.yaml") // folder of separated specs
    mergedFileName.set("generated-spec") // the single autogenerated openapi merged file (gitignore)
    outputDir.set(generatedApiDir)

    typeMappings.set(mapOf(
        "number" to "double"
    ))

    generatorName.set("spring") // https://openapi-generator.tech/docs/generators/spring
    library.set("spring-boot")

    configOptions.put("useSpringBoot3", "true")
    configOptions.put("reactive", "true")
    configOptions.put("modelPackage", "org.mitre.ioaa.openapi")
    configOptions.put("apiPackage", "org.mitre.ioaa.openapi")
    configOptions.put("interfaceOnly", "true")
    configOptions.put("delegatePattern", "true")
    configOptions.put("openApiNullable", "false")
    configOptions.put("generateBuilders", "true")
    configOptions.put("containerDefaultToNull", "true")
    configOptions.put("generatedConstructorWithRequiredArgs", "true")
    configOptions.put("modelPackage", "org.mitre.caasd.app.controllers")
    configOptions.put("apiPackage", "org.mitre.caasd.app.controllers")
}

application {
    mainClass.set("org.mitre.tdp.boogie.Main")
}

tasks.bootJar {
    archiveBaseName.set("boogie-service")
}
